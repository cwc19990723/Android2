package com.example.day13_lxc3;

import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.List;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

public class MyAdapter extends BaseAdapter{
	
	private List<Carr> list;
	private Context context;

	public MyAdapter(List<Carr> list, Context context) {
		super();
		this.list = list;
		this.context = context;
	}

	@Override
	public int getCount() {
		return list.size();
	}

	@Override
	public Object getItem(int position) {
		return list.get(position);
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		
		ViewHolder vh = null;
		if(convertView==null){
			convertView = LayoutInflater.from(context).inflate(R.layout.iptt, null);
			vh = new ViewHolder();
			
			 vh.ip_tu = (ImageView) convertView.findViewById(R.id.ip_tu);
			 vh.ip_zi1 = (EditText) convertView.findViewById(R.id.ip_zi1);
			 vh.ip_zi2 = (EditText) convertView.findViewById(R.id.ip_zi2);
			 
			 convertView.setTag(vh);
		}else {
			vh = (ViewHolder) convertView.getTag();
		}
		
		Carr carr = list.get(position);
		
		//new LoadImageTask
		vh.ip_zi1.setText(carr.getBookname());
		vh.ip_zi2.setText(carr.getAuther());
		
		return convertView;
	}
	
	class ViewHolder{
		ImageView ip_tu;
		TextView ip_zi1;
		TextView ip_zi2;
	}
	
	class LoadImageTask extends AsyncTask<String, Void, Bitmap>{
		
		private ImageView ip_tu;
		
		public LoadImageTask(ImageView ip_tu) {
			super();
			this.ip_tu = ip_tu;
		}

		@Override
		protected Bitmap doInBackground(String... params) {
			
			//将创建URL将URL对象地址转为Bitmap对象
			//params代表下表开始的地方
			try {
				URL url = new URL(params[0]);
				//获取HttpURLConneCtion对象
				HttpURLConnection con = (HttpURLConnection) url.openConnection();
				//获取对应的响应码
				int responseCode = con.getResponseCode();
				if(responseCode==200){
					Log.e("Main", "200--------");
					//获取输入流
					InputStream in = con.getInputStream();
					//将输入流对象转换为Bitmap对象
					Bitmap dd = BitmapFactory.decodeStream(in);
					return dd;
				}else {
					System.out.println("请求有误");
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			
			return null;
		}
		
		@Override
		protected void onPostExecute(Bitmap result) {
			super.onPostExecute(result);
			//将获取的Bitmap对象设置到ViewHolder上
			Log.e("----Main---", "result"+result);
			if(result==null){
				
			}
		}
		
	}

}
